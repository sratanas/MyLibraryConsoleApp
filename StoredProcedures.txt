CREATE PROCEDURE GetAllBookInfo

AS

WITH book_union AS (SELECT Id, Title, AuthorId, Genre, Location FROM Books
UNION 
SELECT Id, Title, Author, Genre, Location FROM AudioBooks)
SELECT book_union.Id, Genre, Location, FirstName, LastName, Title FROM book_union
JOIN Authors ON Authors.id = book_union.AuthorId



CREATE PROCEDURE SearchAuthors
@AuthorSearchParam VARCHAR(50)

AS

SELECT * FROM Authors
WHERE FirstName LIKE @AuthorSearchParam
OR
LastName LIKE @AuthorSearchParam
OR 
CONCAT(FirstName, ' ', LastName) = @AuthorSearchParam



CREATE PROCEDURE AddAuthor
@AuthorFirstName VARCHAR(50),
@AuthorLastName VARCHAR(50),
@IsFemale VARCHAR(5)

AS

INSERT INTO Authors (FirstName, LastName, IsFemale)
VALUES (@AuthorFirstName, @AuthorLastName, @IsFemale)



CREATE PROCEDURE GetBooksByAuthor
@AuthorId INT

AS

SELECT * FROM Books
WHERE Author = @AuthorId



CREATE PROCEDURE TitleSearch
@TitleSearchParam VARCHAR(50)

AS

WITH book_union AS (SELECT Id, Title, AuthorId FROM Books
UNION 
SELECT Id, Title, Author FROM AudioBooks)
SELECT book_union.Id, FirstName, LastName, Title FROM book_union
JOIN Authors ON Authors.id = book_union.AuthorId
WHERE Title LIKE @TitleSearchParam




CREATE PROCEDURE GetAllGenres

AS

SELECT * FROM Genres



CREATE PROCEDURE GetAllLocations

AS

SELECT * FROM Locations



CREATE PROCEDURE GetLocationById
@LocationId INT
AS

SELECT * FROM Locations
WHERE Id = @LocationId



CREATE PROCEDURE GetGenreById
@GenreId INT
AS

SELECT * FROM Genres
WHERE Id = @GenreId



CREATE PROCEDURE AddBook
@Title varchar(100),
@YearPublished INT,
@Author INT,
@Genre INT,
@Location INT

AS

INSERT INTO Books (Title, YearPublished, Author, Genre, Location)
VALUES (@Title, @YearPublished, @Author, @Genre, @Location)



CREATE PROCEDURE GetBookDetailsById
@BookId INT

AS

SELECT b.Id, b.Title, g.GenreName, b.YearPublished, l.LocationName, a.FirstName, a.LastName
FROM Books as b
JOIN Locations as l ON b.Location = l.Id
JOIN Authors as a ON b.Author = a.Id
JOIN Genres AS g ON b.Genre = g.Id
WHERE b.Id = @BookId



CREATE PROCEDURE UpdateBookInformation
@BookId INT,
@NewInput VARCHAR (80),
@UpdateType VARCHAR(80)

AS

IF (@UpdateType = '1') UPDATE Books SET Title = @NewInput WHERE Id = @BookId
ELSE IF (@UpdateType = '2') UPDATE Books SET Author = PARSE(@NewInput AS INT) WHERE Id = @BookId
ELSE IF (@UpdateType = '3') UPDATE Books SET YearPublished = PARSE(@NewInput AS INT) WHERE Id = @BookId
ELSE IF (@UpdateType = '4')  UPDATE Books SET Genre = PARSE(@NewInput AS INT) WHERE Id = @BookId
ELSE IF (@UpdateType = '4')  UPDATE Books SET Location = PARSE(@NewInput AS INT) WHERE Id = @BookId


CREATE PROCEDURE GetAllBooksOutOnLoan

AS

SELECT * FROM Books_OutOnLoan


CREATE PROCEDURE AddUser
@UserName VARCHAR(50)

AS

INSERT INTO Users
VALUES(@UserName)


CREATE PROCEDURE AddVisitToNewUser

@UserId VARCHAR,
@Date DATE

AS

INSERT INTO Visits 
VALUES (PARSE(@userId AS INT), @Date)